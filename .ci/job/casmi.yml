#
#   Copyright (c) 2014-2016 CASM Organization
#   All rights reserved.
#
#   Developed by: Philipp Paulweber
#                 Emmanuel Pescosta
#                 Florian Hahn
#                 https://github.com/casm-lang/casm
#
#   This file is part of casm.
#
#   casm is free software: you can redistribute it and/or modify
#   it under the terms of the GNU General Public License as published by
#   the Free Software Foundation, either version 3 of the License, or
#   (at your option) any later version.
#
#   casm is distributed in the hope that it will be useful,
#   but WITHOUT ANY WARRANTY; without even the implied warranty of
#   MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the
#   GNU General Public License for more details.
#
#   You should have received a copy of the GNU General Public License
#   along with casm. If not, see <http://www.gnu.org/licenses/>.
#

# jobs:
- name: {{NAME}}-master
  plan:
  - aggregate:
    - get: config
      params: { submodules: none }
    - get: {{NAME}}@master
      trigger: true
  - task: fetch
    file: config/.ci/task/fetch.yml
    input_mapping:
      repo: {{NAME}}@master
    on_failure:
      put: notify
      params:
        link: true
        text: |
          $BUILD_JOB_NAME fetch failed
  - task: build
    file: config/.ci/task/build.yml
    input_mapping:
      in: out
    on_failure:
      put: notify
      params:
        link: true
        text: |
          $BUILD_JOB_NAME build failed
  - task: test
    file: config/.ci/task/test.yml
    input_mapping:
      in: out
    on_failure:
      put: notify
      params:
        link: true
        text: |
          $BUILD_JOB_NAME test failed


- name: {{NAME}}.latest
  plan:
  - aggregate:
    - get: config
      params: { submodules: none }
    - get: gtest@master
      passed: [ gtest-master ]
      trigger: true
    - get: libstdhl@master
      passed: [ libstdhl-master ]
      trigger: true
    - get: libpass@master
      passed: [ libpass-master ]
      trigger: true
    - get: libcasm-fe@master
      passed: [ libcasm-fe-master ]
      trigger: true
    - get: libcasm-ir@master
      passed: [ libcasm-ir-master ]
      trigger: true
    - get: libcasm-tc@master
      passed: [ libcasm-tc-master ]
      trigger: true
    - get: {{NAME}}@master
      trigger: true
      params: { submodules: none }
  - task: fetch
    file: config/.ci/task/fetch/deps5.yml
    input_mapping:
      repo: {{NAME}}@master
      dep0: gtest@master
      dep1: libstdhl@master
      dep2: libpass@master
      dep3: libcasm-fe@master
      dep4: libcasm-ir@master
      dep5: libcasm-tc@master
    params:
      DEPS: gtest stdhl pass casm-fe casm-ir casm-tc
    on_failure:
      put: notify
      params:
        link: true
        text: |
          $BUILD_JOB_NAME fetch failed
  - task: build
    file: config/.ci/task/build.yml
    input_mapping:
      in: out
    on_failure:
      put: notify
      params:
        link: true
        text: |
          $BUILD_JOB_NAME build failed
  - task: test
    file: config/.ci/task/test.yml
    input_mapping:
      in: out
    on_failure:
      put: notify
      params:
        link: true
        text: |
          $BUILD_JOB_NAME test failed


- name: {{NAME}}
  plan:
  - aggregate:
    - get: config
      params: { submodules: none }
    - get: casm@master
      trigger: true
  - task: fetch
    file: config/.ci/task/fetch.yml
    input_mapping:
      repo: casm@master
    params:
      REPO: repo/casmi
    on_failure:
      put: notify
      params:
        link: true
        text: |
          $BUILD_JOB_NAME fetch failed
  - task: build
    file: config/.ci/task/build.yml
    input_mapping:
      in: out
    params:
      REPO: repo/casmi
    on_failure:
      put: notify
      params:
        link: true
        text: |
          $BUILD_JOB_NAME build failed
  - task: test
    file: config/.ci/task/test.yml
    input_mapping:
      in: out
    params:
      REPO: repo/casmi
    on_failure:
      put: notify
      params:
        link: true
        text: |
          $BUILD_JOB_NAME test failed
